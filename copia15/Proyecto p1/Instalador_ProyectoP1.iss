; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Banco"
#define MyAppVersion "1.0"
#define MyAppPublisher "Gualotuña,Rodirguez,Ullco"
#define MyAppExeName "banco.exe"
#define MyAppAssocName "cuentasBanco Binary File"
#define MyAppAssocExt ".bin"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{4D7339FF-47D2-4ADE-A2CA-404A12CAD4A1}
AppName=Banco con Marquesina
AppVersion=1.0
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\BancoMarquesina
DefaultGroupName=BancoMarquesina
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputDir=C:\Users\USUARIO\Downloads
OutputBaseFilename=BancoMarquesina_Instalador
SolidCompression=yes
WizardStyle=modern
Compression=lzma

[Languages]
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "banco.exe"; DestDir: "{app}"
Source: "marquesina_sfml.exe"; DestDir: "{app}"
Source: "*.dll"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.txt"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.css"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.png"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.pdf"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.pbm"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.pbm.png"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist
Source: "*.md"; DestDir: "{app}"; Flags: ignoreversion skipifsourcedoesntexist

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{group}\Banco con Marquesina"; Filename: "{app}\banco.exe"

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[UserInfo]
UserInfoPage=true
UserInfoSerial=true

[Code]
var
  ValidKeys: array[0..19] of String;

procedure InitializeValidKeys();
begin
  ValidKeys[0] := 'BANC-2024-001';
  ValidKeys[1] := 'BANC-2024-002';
  ValidKeys[2] := 'BANC-2024-003';
  ValidKeys[3] := 'BANC-2024-004';
  ValidKeys[4] := 'BANC-2024-005';
  ValidKeys[5] := 'BANC-2024-006';
  ValidKeys[6] := 'BANC-2024-007';
  ValidKeys[7] := 'BANC-2024-008';
  ValidKeys[8] := 'BANC-2024-009';
  ValidKeys[9] := 'BANC-2024-010';
  ValidKeys[10] := 'BANC-2024-011';
  ValidKeys[11] := 'BANC-2024-012';
  ValidKeys[12] := 'BANC-2024-013';
  ValidKeys[13] := 'BANC-2024-014';
  ValidKeys[14] := 'BANC-2024-015';
  ValidKeys[15] := 'BANC-2024-016';
  ValidKeys[16] := 'BANC-2024-017';
  ValidKeys[17] := 'BANC-2024-018';
  ValidKeys[18] := 'BANC-2024-019';
  ValidKeys[19] := 'BANC-2024-020';
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  i: Integer;
  key: String;
  found: Boolean;
begin
  Result := True;
  if CurPageID = wpUserInfo then
  begin
    found := False;
    key := WizardForm.UserInfoSerialEdit.Text;
    for i := 0 to 19 do
    begin
      if key = ValidKeys[i] then
      begin
        found := True;
        break;
      end;
    end;
    if not found then
    begin
      MsgBox('Clave incorrecta. Por favor, ingrese una clave válida.', mbError, MB_OK);
      Result := False;
    end;
  end;
end;

procedure InitializeWizard;
begin
  InitializeValidKeys();
end;